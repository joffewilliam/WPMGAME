"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./components/ResultsGraph.tsx":
/*!*************************************!*\
  !*** ./components/ResultsGraph.tsx ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/**\r\n * ResultsGraph Component\r\n * \r\n * Renders a canvas-based performance graph showing:\r\n * - WPM over time\r\n * - Accuracy percentage over time\r\n * - Error indicators\r\n * - Supports both light and dark themes\r\n */ \nvar _s = $RefreshSig$();\n\nconst ResultsGraph = (param)=>{\n    let { data, width = 900, height = 300, theme = 'dark' } = param;\n    _s();\n    const canvasRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Handle edge cases with minimal data\n    if (!data || data.length <= 1) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            style: {\n                width,\n                height\n            },\n            className: \"flex items-center justify-center text-gray-500\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: \"Insufficient data to display graph\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\ResultsGraph.tsx\",\n                lineNumber: 36,\n                columnNumber: 9\n            }, undefined)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\ResultsGraph.tsx\",\n            lineNumber: 32,\n            columnNumber: 7\n        }, undefined);\n    }\n    // Ensure maxSeconds is set based on actual data\n    const maxSeconds = Math.max(...data.map((point)=>point.second));\n    const maxWPM = Math.max(100, Math.max(...data.map((point)=>point.wpm)));\n    const maxErrors = Math.max(...data.map((point)=>point.errors), 5);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"ResultsGraph.useEffect\": ()=>{\n            if (!canvasRef.current || data.length === 0) return;\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n            if (!ctx) return;\n            // Add padding to prevent cutting off labels\n            const padding = {\n                left: 40,\n                right: 40,\n                top: 20,\n                bottom: 25 // Bottom padding for time labels\n            };\n            // Adjusted drawing area\n            const drawWidth = width - padding.left - padding.right;\n            const drawHeight = height - padding.top - padding.bottom;\n            // Set up canvas\n            ctx.clearRect(0, 0, width, height);\n            // Background color based on theme\n            if (theme === 'dark') {\n                ctx.fillStyle = '#1e293b'; // Dark background\n            } else {\n                ctx.fillStyle = '#f8fafc'; // Light background\n            }\n            ctx.fillRect(0, 0, width, height);\n            // Draw chart title\n            const titleColor = theme === 'dark' ? '#f8fafc' : '#1e293b';\n            ctx.fillStyle = titleColor;\n            ctx.font = 'bold 14px sans-serif';\n            ctx.textAlign = 'center';\n            ctx.fillText('Performance Over Time', width / 2, padding.top / 2 + 5);\n            // Draw legend at the top of the graph, below the title\n            const legendY = padding.top / 2 + 20;\n            const legendX = width / 2 - 120; // Center the legend\n            // WPM legend item\n            ctx.strokeStyle = theme === 'dark' ? '#4ade80' : '#22c55e';\n            ctx.beginPath();\n            ctx.moveTo(legendX, legendY);\n            ctx.lineTo(legendX + 20, legendY);\n            ctx.stroke();\n            ctx.fillStyle = theme === 'dark' ? '#f8fafc' : '#1e293b';\n            ctx.textAlign = 'left';\n            ctx.fillText('WPM', legendX + 25, legendY + 4);\n            // Accuracy legend item\n            ctx.strokeStyle = theme === 'dark' ? '#60a5fa' : '#3b82f6';\n            ctx.beginPath();\n            ctx.moveTo(legendX + 80, legendY);\n            ctx.lineTo(legendX + 100, legendY);\n            ctx.stroke();\n            ctx.fillText('Accuracy', legendX + 105, legendY + 4);\n            // Error legend item\n            ctx.fillStyle = theme === 'dark' ? '#ef4444' : '#dc2626';\n            ctx.beginPath();\n            ctx.arc(legendX + 190, legendY, 4, 0, 2 * Math.PI);\n            ctx.fill();\n            ctx.fillStyle = theme === 'dark' ? '#f8fafc' : '#1e293b';\n            ctx.fillText('Errors', legendX + 200, legendY + 4);\n            // Draw grid\n            ctx.strokeStyle = theme === 'dark' ? '#334155' : '#cbd5e1'; // Grid lines\n            ctx.lineWidth = 1;\n            // Draw y-axis labels for WPM (left side)\n            const wpmStep = Math.ceil(maxWPM / 4);\n            for(let i = 0; i <= 4; i++){\n                const wpmValue = i * wpmStep;\n                const y = padding.top + drawHeight - wpmValue / maxWPM * drawHeight;\n                // Draw horizontal grid line\n                ctx.beginPath();\n                ctx.moveTo(padding.left, y);\n                ctx.lineTo(padding.left + drawWidth, y);\n                ctx.stroke();\n                // Draw WPM label\n                ctx.fillStyle = theme === 'dark' ? '#94a3b8' : '#475569';\n                ctx.font = '11px sans-serif';\n                ctx.textAlign = 'right';\n                ctx.fillText(\"\".concat(wpmValue), padding.left - 5, y + 4);\n            }\n            // Draw y-axis labels for Accuracy (right side)\n            for(let i = 0; i <= 4; i++){\n                const accuracyValue = i * 25; // 0, 25, 50, 75, 100\n                const y = padding.top + drawHeight - accuracyValue / 100 * drawHeight;\n                // Accuracy label\n                ctx.fillStyle = theme === 'dark' ? '#94a3b8' : '#475569';\n                ctx.textAlign = 'left';\n                ctx.fillText(\"\".concat(accuracyValue, \"%\"), padding.left + drawWidth + 5, y + 4);\n            }\n            // Draw x-axis (time) labels and vertical grid lines\n            const timeInterval = maxSeconds <= 15 ? 5 : maxSeconds <= 30 ? 10 : 15;\n            for(let i = 0; i <= maxSeconds; i += timeInterval){\n                const x = padding.left + i / maxSeconds * drawWidth;\n                // Draw vertical grid line\n                ctx.beginPath();\n                ctx.moveTo(x, padding.top);\n                ctx.lineTo(x, padding.top + drawHeight);\n                ctx.stroke();\n                // Draw time label\n                ctx.fillStyle = theme === 'dark' ? '#94a3b8' : '#475569';\n                ctx.textAlign = 'center';\n                ctx.fillText(\"\".concat(i, \"s\"), x, padding.top + drawHeight + 15);\n            }\n            // Draw final time marker if not included in intervals\n            if (maxSeconds % timeInterval !== 0) {\n                const x = padding.left + drawWidth;\n                ctx.fillStyle = theme === 'dark' ? '#94a3b8' : '#475569';\n                ctx.textAlign = 'center';\n                ctx.fillText(\"\".concat(maxSeconds, \"s\"), x, padding.top + drawHeight + 15);\n            }\n            // Draw WPM line\n            ctx.strokeStyle = theme === 'dark' ? '#4ade80' : '#22c55e'; // Green line for WPM\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            data.forEach({\n                \"ResultsGraph.useEffect\": (point, index)=>{\n                    const x = padding.left + point.second / maxSeconds * drawWidth;\n                    const y = padding.top + drawHeight - point.wpm / maxWPM * drawHeight;\n                    if (index === 0) {\n                        ctx.moveTo(x, y);\n                    } else {\n                        ctx.lineTo(x, y);\n                    }\n                }\n            }[\"ResultsGraph.useEffect\"]);\n            ctx.stroke();\n            // Draw errors as red dots\n            ctx.fillStyle = theme === 'dark' ? '#ef4444' : '#dc2626'; // Red for errors\n            data.forEach({\n                \"ResultsGraph.useEffect\": (point)=>{\n                    if (point.errors > 0) {\n                        const x = padding.left + point.second / maxSeconds * drawWidth;\n                        const y = padding.top + drawHeight - point.wpm / maxWPM * drawHeight;\n                        ctx.beginPath();\n                        ctx.arc(x, y, 4, 0, 2 * Math.PI);\n                        ctx.fill();\n                    }\n                }\n            }[\"ResultsGraph.useEffect\"]);\n            // Draw accuracy line\n            ctx.strokeStyle = theme === 'dark' ? '#60a5fa' : '#3b82f6'; // Blue line for accuracy\n            ctx.lineWidth = 2;\n            ctx.beginPath();\n            data.forEach({\n                \"ResultsGraph.useEffect\": (point, index)=>{\n                    const x = padding.left + point.second / maxSeconds * drawWidth;\n                    const y = padding.top + drawHeight - point.accuracy / 100 * drawHeight;\n                    if (index === 0) {\n                        ctx.moveTo(x, y);\n                    } else {\n                        ctx.lineTo(x, y);\n                    }\n                }\n            }[\"ResultsGraph.useEffect\"]);\n            ctx.stroke();\n            // Draw axis labels\n            ctx.fillStyle = theme === 'dark' ? '#f8fafc' : '#1e293b';\n            ctx.font = 'bold 12px sans-serif';\n            // WPM label\n            ctx.textAlign = 'center';\n            ctx.save();\n            ctx.translate(15, padding.top + drawHeight / 2);\n            ctx.rotate(-Math.PI / 2);\n            ctx.fillText('WPM', 0, 0);\n            ctx.restore();\n            // Accuracy label\n            ctx.save();\n            ctx.translate(width - 15, padding.top + drawHeight / 2);\n            ctx.rotate(Math.PI / 2);\n            ctx.fillText('Accuracy', 0, 0);\n            ctx.restore();\n            // Time label\n            ctx.textAlign = 'center';\n            ctx.fillText('Time (seconds)', padding.left + drawWidth / 2, height - 5);\n        }\n    }[\"ResultsGraph.useEffect\"], [\n        data,\n        width,\n        height,\n        maxWPM,\n        maxErrors,\n        theme,\n        maxSeconds\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"canvas\", {\n        ref: canvasRef,\n        width: width,\n        height: height,\n        className: \"rounded-md mx-auto\"\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\ResultsGraph.tsx\",\n        lineNumber: 242,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ResultsGraph, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ResultsGraph;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ResultsGraph);\nvar _c;\n$RefreshReg$(_c, \"ResultsGraph\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/ResultsGraph.tsx\n"));

/***/ })

});