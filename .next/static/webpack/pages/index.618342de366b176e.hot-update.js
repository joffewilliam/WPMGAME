"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./components/typing/TextDisplay.tsx":
/*!*******************************************!*\
  !*** ./components/typing/TextDisplay.tsx ***!
  \*******************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/**\r\n * TextDisplay Component\r\n * \r\n * Renders the typing text with visual feedback including:\r\n * - Character-by-character coloring based on typing accuracy\r\n * - Animated caret indicating current typing position\r\n * - Support for word wrapping and space characters\r\n * - Different display modes based on game mode\r\n */ \n\nconst TextDisplay = (param)=>{\n    let { sentence, userInput, gameMode, normalText, normalTextOffset, paragraphText, currentParagraphIdx, paragraphAuthors, isFinished, theme = {\n        textColor: 'text-gray-800',\n        successColor: 'text-green-600',\n        errorColor: 'text-red-600',\n        caretColor: 'text-blue-600'\n    }, wordErrorCounts = {}, onTextClick, isActivelyTyping = false } = param;\n    const wordBoundaries = sentence.split(' ').reduce((acc, word, i)=>{\n        if (i === 0) return [\n            0\n        ];\n        const prevEnd = acc[i - 1] + sentence.split(' ')[i - 1].length + 1;\n        return [\n            ...acc,\n            prevEnd\n        ];\n    }, [\n        0\n    ]);\n    // Get current word boundaries\n    const getCurrentWordBounds = (position)=>{\n        let currentWordStart = 0;\n        let currentWordEnd = sentence.length;\n        // Find which word the current position belongs to\n        for(let i = 0; i < wordBoundaries.length; i++){\n            const wordStart = wordBoundaries[i];\n            const wordEnd = wordBoundaries[i + 1] || sentence.length;\n            // If position is within this word (including at the end but before space)\n            if (position >= wordStart && position <= wordEnd) {\n                // If we're at a space position, we belong to the previous word\n                if (position < sentence.length && sentence[position] === ' ') {\n                    currentWordStart = wordStart;\n                    currentWordEnd = position; // End at the space, don't include it\n                } else {\n                    currentWordStart = wordStart;\n                    currentWordEnd = wordEnd;\n                }\n                break;\n            }\n        }\n        return {\n            start: currentWordStart,\n            end: currentWordEnd\n        };\n    };\n    const currentWordBounds = getCurrentWordBounds(userInput.length);\n    // Split sentence into words, preserving spaces\n    const wordRegex = /[^\\s]+\\s*/g;\n    const words = sentence.match(wordRegex) || [];\n    let charIndex = 0;\n    const elements = [];\n    for(let w = 0; w < words.length; w++){\n        const word = words[w];\n        const wordSpans = [];\n        for(let i = 0; i < word.length; i++, charIndex++){\n            // Always render a caret placeholder to reserve space\n            const isActiveCaret = charIndex === userInput.length && !isFinished;\n            wordSpans.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                className: \"caret-inline\".concat(isActiveCaret ? \" \".concat(theme.caretColor, \" animate-blink\") : ' caret-inline-hidden')\n            }, \"caret-\".concat(charIndex), false, {\n                fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\typing\\\\TextDisplay.tsx\",\n                lineNumber: 96,\n                columnNumber: 9\n            }, undefined));\n            const char = word[i];\n            // Determine which word this character belongs to\n            let wordIdx = w;\n            const hasError = wordErrorCounts[wordIdx] && wordErrorCounts[wordIdx] > 0;\n            if (char === ' ') {\n                if (charIndex < userInput.length) {\n                    const correct = userInput[charIndex] === char;\n                    wordSpans.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"\".concat(correct ? theme.successColor : theme.errorColor, \" \").concat(hasError ? 'bg-red-900 bg-opacity-20' : '', \" inline-block w-[0.3em]\"),\n                        children: \"\\xa0\"\n                    }, charIndex, false, {\n                        fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\typing\\\\TextDisplay.tsx\",\n                        lineNumber: 109,\n                        columnNumber: 13\n                    }, undefined));\n                } else {\n                    wordSpans.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"relative inline-block w-[0.3em]\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"\".concat(theme.textColor, \" opacity-70\"),\n                            children: \"\\xa0\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\typing\\\\TextDisplay.tsx\",\n                            lineNumber: 119,\n                            columnNumber: 15\n                        }, undefined)\n                    }, charIndex, false, {\n                        fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\typing\\\\TextDisplay.tsx\",\n                        lineNumber: 118,\n                        columnNumber: 13\n                    }, undefined));\n                }\n            } else {\n                if (charIndex < userInput.length) {\n                    const correct = userInput[charIndex] === char;\n                    wordSpans.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"\".concat(correct ? theme.successColor : theme.errorColor, \" \").concat(hasError ? 'bg-red-900 bg-opacity-20' : '', \" relative inline-block\"),\n                        children: char\n                    }, charIndex, false, {\n                        fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\typing\\\\TextDisplay.tsx\",\n                        lineNumber: 127,\n                        columnNumber: 13\n                    }, undefined));\n                } else {\n                    wordSpans.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        className: \"relative inline-block\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                            className: \"\".concat(theme.textColor, \" opacity-70\"),\n                            children: char\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\typing\\\\TextDisplay.tsx\",\n                            lineNumber: 137,\n                            columnNumber: 15\n                        }, undefined)\n                    }, charIndex, false, {\n                        fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\typing\\\\TextDisplay.tsx\",\n                        lineNumber: 136,\n                        columnNumber: 13\n                    }, undefined));\n                }\n            }\n        }\n        // Wrap the word (and trailing space) in a span to prevent breaking\n        elements.push(/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n            className: \"word-block\",\n            children: wordSpans\n        }, \"word-\".concat(w), false, {\n            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\typing\\\\TextDisplay.tsx\",\n            lineNumber: 145,\n            columnNumber: 7\n        }, undefined));\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"text-xl md:text-2xl leading-relaxed text-left font-mono cursor-text select-none text-display-block\",\n        children: elements\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\typing\\\\TextDisplay.tsx\",\n        lineNumber: 151,\n        columnNumber: 5\n    }, undefined);\n};\n_c = TextDisplay;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TextDisplay);\nvar _c;\n$RefreshReg$(_c, \"TextDisplay\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/typing/TextDisplay.tsx\n"));

/***/ })

});