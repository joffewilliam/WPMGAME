"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./components/TypingTest.tsx":
/*!***********************************!*\
  !*** ./components/TypingTest.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(pages-dir-browser)/./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(pages-dir-browser)/./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/ThemeContext */ \"(pages-dir-browser)/./contexts/ThemeContext.tsx\");\n/* harmony import */ var _utils_calculations__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/calculations */ \"(pages-dir-browser)/./utils/calculations.ts\");\n/* harmony import */ var _typing_TextDisplay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./typing/TextDisplay */ \"(pages-dir-browser)/./components/typing/TextDisplay.tsx\");\n/* harmony import */ var _typing_ResultsPanel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./typing/ResultsPanel */ \"(pages-dir-browser)/./components/typing/ResultsPanel.tsx\");\n/* harmony import */ var _typing_StatsDisplay__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./typing/StatsDisplay */ \"(pages-dir-browser)/./components/typing/StatsDisplay.tsx\");\n/* harmony import */ var _data_sentences__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../data/sentences */ \"(pages-dir-browser)/./data/sentences.ts\");\n/**\r\n * TypingTest Component\r\n * \r\n * Core component that manages the typing test functionality:\r\n * - Handles multiple game modes (normal, explicit, paragraphs)\r\n * - Tracks typing metrics (WPM, accuracy, errors)\r\n * - Manages test timing and state\r\n * - Collects performance data for results display\r\n */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\nconst NORMAL_WORD_COUNTS = [\n    25,\n    50,\n    100\n];\nconst TEST_TIMES = [\n    15,\n    30,\n    45,\n    60\n];\nconst TypingTest = (param)=>{\n    let { gameMode: externalGameMode, onGameModeChange, onTestStatusChange } = param;\n    _s();\n    const [gameMode, setGameMode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(externalGameMode || \"normal\");\n    const [normalWordCount, setNormalWordCount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(25);\n    const [normalText, setNormalText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [normalTextOffset, setNormalTextOffset] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [paragraphQuotes, setParagraphQuotes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [paragraphText, setParagraphText] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [paragraphAuthors, setParagraphAuthors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [currentParagraphIdx, setCurrentParagraphIdx] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [sentence, setSentence] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [userInput, setUserInput] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [startTime, setStartTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [testTime, setTestTime] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(60);\n    const [timeLeft, setTimeLeft] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(testTime);\n    const [totalCharsTyped, setTotalCharsTyped] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isFinished, setIsFinished] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const inputRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [typingData, setTypingData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [errors, setErrors] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [correctChars, setCorrectChars] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const { theme } = (0,_contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.useTheme)();\n    // Reset all state to initial values (helper)\n    const resetAll = react__WEBPACK_IMPORTED_MODULE_1___default().useCallback({\n        \"TypingTest.useCallback[resetAll]\": ()=>{\n            setUserInput(\"\");\n            setStartTime(null);\n            setTimeLeft(testTime);\n            setTotalCharsTyped(0);\n            setIsFinished(false);\n            setErrors(0);\n            setCorrectChars(0);\n            if (gameMode === \"normal\") {\n                const text = (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomNormalSentence)(normalWordCount);\n                setNormalText(text);\n                setNormalTextOffset(0);\n                setSentence(text);\n            } else if (gameMode === \"explicit\") {\n                setSentence((0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomExplicitSentence)());\n            } else if (gameMode === \"quotes\") {\n                const quotes = [\n                    (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomParagraph)(),\n                    (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomParagraph)(),\n                    (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomParagraph)()\n                ];\n                setParagraphQuotes(quotes);\n                setParagraphAuthors(quotes.map({\n                    \"TypingTest.useCallback[resetAll]\": (q)=>q.author\n                }[\"TypingTest.useCallback[resetAll]\"]));\n                const text = quotes.map({\n                    \"TypingTest.useCallback[resetAll].text\": (q)=>q.text\n                }[\"TypingTest.useCallback[resetAll].text\"]).join(\" \");\n                setParagraphText(text);\n                setSentence(text);\n                setCurrentParagraphIdx(0);\n            }\n            if (inputRef.current) {\n                inputRef.current.focus();\n            }\n        }\n    }[\"TypingTest.useCallback[resetAll]\"], [\n        gameMode,\n        normalWordCount,\n        testTime\n    ]);\n    // Reset when mode, word count, or test time changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"TypingTest.useEffect\": ()=>{\n            resetAll();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        }\n    }[\"TypingTest.useEffect\"], [\n        gameMode,\n        normalWordCount,\n        testTime\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"TypingTest.useEffect\": ()=>{\n            if (!startTime || isFinished) return;\n            if (timeLeft <= 0) {\n                setIsFinished(true);\n                return;\n            }\n            const timer = setTimeout({\n                \"TypingTest.useEffect.timer\": ()=>{\n                    setTimeLeft(timeLeft - 1);\n                }\n            }[\"TypingTest.useEffect.timer\"], 1000);\n            return ({\n                \"TypingTest.useEffect\": ()=>clearTimeout(timer)\n            })[\"TypingTest.useEffect\"];\n        }\n    }[\"TypingTest.useEffect\"], [\n        timeLeft,\n        startTime,\n        isFinished\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"TypingTest.useEffect\": ()=>{\n            if (!startTime || isFinished) return;\n            // Calculate tracking interval based on test time\n            // For shorter tests, we need more frequent data points\n            const trackingFrequency = testTime <= 15 ? 250 : testTime <= 30 ? 500 : 1000;\n            const trackInterval = setInterval({\n                \"TypingTest.useEffect.trackInterval\": ()=>{\n                    const elapsed = Math.floor((Date.now() - startTime) / 1000 * 1000) / 1000; // More precise timing\n                    const totalChars = userInput.length;\n                    const wpm = (0,_utils_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateWPM)(totalCharsTyped + totalChars, elapsed);\n                    const accuracy = totalChars > 0 ? Math.round(correctChars / totalChars * 100) : 100;\n                    setTypingData({\n                        \"TypingTest.useEffect.trackInterval\": (prevData)=>[\n                                ...prevData,\n                                {\n                                    second: elapsed,\n                                    wpm,\n                                    accuracy,\n                                    errors\n                                }\n                            ]\n                    }[\"TypingTest.useEffect.trackInterval\"]);\n                }\n            }[\"TypingTest.useEffect.trackInterval\"], trackingFrequency);\n            return ({\n                \"TypingTest.useEffect\": ()=>clearInterval(trackInterval)\n            })[\"TypingTest.useEffect\"];\n        }\n    }[\"TypingTest.useEffect\"], [\n        startTime,\n        isFinished,\n        userInput.length,\n        totalCharsTyped,\n        correctChars,\n        errors,\n        testTime\n    ]);\n    // Update parent component when test status changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"TypingTest.useEffect\": ()=>{\n            if (onTestStatusChange) {\n                onTestStatusChange(startTime !== null && !isFinished);\n            }\n        }\n    }[\"TypingTest.useEffect\"], [\n        startTime,\n        isFinished,\n        onTestStatusChange\n    ]);\n    // Sync with external game mode if provided\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"TypingTest.useEffect\": ()=>{\n            if (externalGameMode && externalGameMode !== gameMode) {\n                setGameMode(externalGameMode);\n            }\n        }\n    }[\"TypingTest.useEffect\"], [\n        externalGameMode,\n        gameMode\n    ]);\n    const handleChange = (e)=>{\n        const value = e.target.value;\n        if (!startTime) {\n            setStartTime(Date.now());\n            setTypingData([]);\n            setErrors(0);\n            setCorrectChars(0);\n        }\n        if (value.length > sentence.length) return;\n        if (value.length > userInput.length) {\n            const newChar = value[value.length - 1];\n            const expectedChar = sentence[value.length - 1];\n            if (newChar === expectedChar) {\n                setCorrectChars((prev)=>prev + 1);\n            } else {\n                setErrors((prev)=>prev + 1);\n            }\n        }\n        setUserInput(value);\n        if (gameMode === \"normal\" && value.length === sentence.length) {\n            setTotalCharsTyped((prev)=>prev + sentence.length);\n            setUserInput(\"\");\n            const newText = (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomNormalSentence)(normalWordCount);\n            setNormalText((prev)=>prev + \" \" + newText);\n            setSentence((prev)=>prev + \" \" + newText);\n        }\n        if (gameMode === \"explicit\" && value.length === sentence.length) {\n            setTotalCharsTyped((prev)=>prev + sentence.length);\n            setUserInput(\"\");\n            const newText = (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomExplicitSentence)();\n            setSentence(newText);\n        }\n        if (gameMode === \"quotes\") {\n            let quoteBoundaries = [];\n            let idx = 0;\n            for (const q of paragraphQuotes){\n                quoteBoundaries.push(idx);\n                idx += q.text.length + 1;\n            }\n            // When completing the first paragraph and moving to the next\n            if (value.length > 0 && value.length >= paragraphQuotes[0].text.length + 1) {\n                // Calculate how many characters of the first paragraph were correct\n                let firstParaCorrectChars = 0;\n                for(let i = 0; i < paragraphQuotes[0].text.length; i++){\n                    if (i < value.length && value[i] === paragraphQuotes[0].text[i]) {\n                        firstParaCorrectChars++;\n                    }\n                }\n                // Add the characters from completed paragraph to total count\n                const charsCompleted = paragraphQuotes[0].text.length + 1; // +1 for space\n                setTotalCharsTyped((prev)=>prev + charsCompleted);\n                // Adjust correctChars count - keep existing correct chars but subtract what was in first paragraph\n                // and add how many were correct in first paragraph\n                setCorrectChars((prev)=>{\n                    const remainingCorrectChars = Math.max(0, prev - paragraphQuotes[0].text.length);\n                    return remainingCorrectChars + firstParaCorrectChars;\n                });\n                const newQuote = (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomParagraph)();\n                const newQuotes = [\n                    ...paragraphQuotes.slice(1),\n                    newQuote\n                ];\n                setParagraphQuotes(newQuotes);\n                setParagraphAuthors(newQuotes.map((q)=>q.author));\n                const newText = newQuotes.map((q)=>q.text).join(\" \");\n                setParagraphText(newText);\n                setSentence(newText);\n                // Adjust userInput to remove completed paragraph\n                setUserInput(value.slice(paragraphQuotes[0].text.length + 1));\n                setCurrentParagraphIdx((prev)=>(prev + 1) % 3);\n                // Ensure we continue tracking metrics during paragraph transitions\n                const elapsed = Math.floor((Date.now() - startTime) / 1000);\n                const wpm = (0,_utils_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateWPM)(totalCharsTyped + charsCompleted, elapsed);\n                const updatedAccuracy = (correctChars + firstParaCorrectChars) / (totalCharsTyped + charsCompleted) * 100;\n                // Add a data point for this transition to ensure graph data\n                setTypingData((prevData)=>[\n                        ...prevData,\n                        {\n                            second: elapsed,\n                            wpm,\n                            accuracy: Math.round(updatedAccuracy),\n                            errors\n                        }\n                    ]);\n            }\n            // When completing all quotes\n            if (value.length === sentence.length) {\n                setTotalCharsTyped((prev)=>prev + sentence.length);\n                setUserInput(\"\");\n                const quotes = [\n                    (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomParagraph)(),\n                    (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomParagraph)(),\n                    (0,_data_sentences__WEBPACK_IMPORTED_MODULE_7__.getRandomParagraph)()\n                ];\n                setParagraphQuotes(quotes);\n                setParagraphAuthors(quotes.map((q)=>q.author));\n                const text = quotes.map((q)=>q.text).join(\" \");\n                setParagraphText(text);\n                setSentence(text);\n                setCurrentParagraphIdx(0);\n            }\n        }\n    };\n    const wpm = isFinished && startTime ? (0,_utils_calculations__WEBPACK_IMPORTED_MODULE_3__.calculateWPM)(totalCharsTyped + userInput.length, testTime - timeLeft) : null;\n    const handleRestart = resetAll;\n    const handleModeChange = (mode)=>{\n        setGameMode(mode);\n        if (onGameModeChange) {\n            onGameModeChange(mode);\n        }\n    // resetAll will be called by useEffect\n    };\n    const renderWordCountSelector = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex justify-center mb-6 gap-2\",\n            children: NORMAL_WORD_COUNTS.map((count)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: ()=>setNormalWordCount(count),\n                    className: \"px-3 py-1 rounded-md border transition \".concat(normalWordCount === count ? \"bg-blue-600 text-white\" : \"\".concat(theme.buttonBg, \" \").concat(theme.buttonText, \" hover:opacity-80\")),\n                    disabled: gameMode !== \"normal\",\n                    children: [\n                        count,\n                        \" words\"\n                    ]\n                }, count, true, {\n                    fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                    lineNumber: 297,\n                    columnNumber: 9\n                }, undefined))\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n            lineNumber: 295,\n            columnNumber: 5\n        }, undefined);\n    const renderTimeSelector = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex justify-center mb-4 gap-2\",\n            children: TEST_TIMES.map((sec)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: ()=>setTestTime(sec),\n                    className: \"px-3 py-1 rounded-md border transition \".concat(testTime === sec ? \"bg-blue-600 text-white\" : \"\".concat(theme.buttonBg, \" \").concat(theme.buttonText, \" hover:opacity-80\")),\n                    disabled: startTime !== null && !isFinished,\n                    children: [\n                        sec,\n                        \"s\"\n                    ]\n                }, sec, true, {\n                    fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                    lineNumber: 316,\n                    columnNumber: 9\n                }, undefined))\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n            lineNumber: 314,\n            columnNumber: 5\n        }, undefined);\n    const renderParagraphAuthor = ()=>{\n        if (gameMode === \"quotes\" && paragraphQuotes.length > 0) {\n            var _paragraphQuotes_idx;\n            let idx = 0;\n            let acc = 0;\n            for(let i = 0; i < paragraphQuotes.length; i++){\n                acc += paragraphQuotes[i].text.length + 1;\n                if (userInput.length < acc) {\n                    idx = i;\n                    break;\n                }\n            }\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 text-right w-full max-w-3xl mx-auto\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                    className: \"italic text-base font-medium opacity-80 \".concat(theme.textColor),\n                    children: (_paragraphQuotes_idx = paragraphQuotes[idx]) === null || _paragraphQuotes_idx === void 0 ? void 0 : _paragraphQuotes_idx.author\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                    lineNumber: 345,\n                    columnNumber: 11\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                lineNumber: 344,\n                columnNumber: 9\n            }, undefined);\n        }\n        return null;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: theme.mainBg,\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"section\", {\n            className: \"max-w-4xl w-full transition-all duration-300 ease-in-out flex flex-col items-center mx-auto px-4\",\n            children: [\n                renderTimeSelector(),\n                gameMode === \"normal\" && renderWordCountSelector(),\n                sentence ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"w-full mb-12 text-center select-none\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_typing_TextDisplay__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                                sentence: sentence,\n                                userInput: userInput,\n                                theme: theme\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                                lineNumber: 365,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                            lineNumber: 364,\n                            columnNumber: 13\n                        }, undefined),\n                        renderParagraphAuthor(),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                            ref: inputRef,\n                            type: \"text\",\n                            className: \"opacity-0 absolute top-0 left-0 h-1 w-1\",\n                            value: userInput,\n                            onChange: handleChange,\n                            disabled: isFinished,\n                            autoFocus: true,\n                            spellCheck: false,\n                            autoComplete: \"off\",\n                            autoCorrect: \"off\",\n                            autoCapitalize: \"off\",\n                            \"aria-label\": \"Typing test input\",\n                            title: \"Typing test input\"\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                            lineNumber: 374,\n                            columnNumber: 13\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_typing_StatsDisplay__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                            timeLeft: timeLeft,\n                            totalCharsTyped: totalCharsTyped,\n                            userInputLength: userInput.length,\n                            theme: theme\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                            lineNumber: 390,\n                            columnNumber: 13\n                        }, undefined),\n                        isFinished && wpm !== null ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_typing_ResultsPanel__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                            wpm: wpm,\n                            typingData: typingData,\n                            handleRestart: handleRestart,\n                            theme: theme\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                            lineNumber: 398,\n                            columnNumber: 15\n                        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"text-center \".concat(theme.textColor, \" opacity-70 italic mt-2\"),\n                            children: !startTime ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: [\n                                    \"Click anywhere and start typing \",\n                                    gameMode === \"quotes\" ? \"exactly what you see\" : \"the text\",\n                                    \" to begin...\"\n                                ]\n                            }, void 0, true, {\n                                fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                                lineNumber: 407,\n                                columnNumber: 19\n                            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                                children: \"Keep typing! The clock is ticking...\"\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                                lineNumber: 409,\n                                columnNumber: 19\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                            lineNumber: 405,\n                            columnNumber: 15\n                        }, undefined),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"flex justify-center mt-8\",\n                            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleRestart,\n                                className: \"flex items-center gap-2 px-4 py-2 rounded-full shadow transition \".concat(theme.buttonBg, \" \").concat(theme.buttonText, \" hover:opacity-80\"),\n                                \"aria-label\": \"Reset typing test\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                                    xmlns: \"http://www.w3.org/2000/svg\",\n                                    className: \"h-5 w-5\",\n                                    fill: \"none\",\n                                    viewBox: \"0 0 24 24\",\n                                    stroke: \"currentColor\",\n                                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                                        strokeLinecap: \"round\",\n                                        strokeLinejoin: \"round\",\n                                        strokeWidth: 2,\n                                        d: \"M12 4V1m0 0L8 5m4-4l4 4M4.93 4.93a10 10 0 1014.14 0M1 12h3m16 0h3\"\n                                    }, void 0, false, {\n                                        fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                                        lineNumber: 421,\n                                        columnNumber: 19\n                                    }, undefined)\n                                }, void 0, false, {\n                                    fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                                    lineNumber: 420,\n                                    columnNumber: 17\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                                lineNumber: 415,\n                                columnNumber: 15\n                            }, undefined)\n                        }, void 0, false, {\n                            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                            lineNumber: 414,\n                            columnNumber: 13\n                        }, undefined)\n                    ]\n                }, void 0, true) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    className: \"text-center \".concat(theme.textColor, \" text-lg\"),\n                    children: \"Loading challenge...\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                    lineNumber: 427,\n                    columnNumber: 11\n                }, undefined),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"fixed inset-0 z-[-1]\",\n                    onClick: ()=>{\n                        var _inputRef_current;\n                        return (_inputRef_current = inputRef.current) === null || _inputRef_current === void 0 ? void 0 : _inputRef_current.focus();\n                    },\n                    \"aria-hidden\": \"true\"\n                }, void 0, false, {\n                    fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n                    lineNumber: 430,\n                    columnNumber: 9\n                }, undefined)\n            ]\n        }, void 0, true, {\n            fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n            lineNumber: 356,\n            columnNumber: 7\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\dragg\\\\OneDrive\\\\Desktop\\\\WPMGAME\\\\components\\\\TypingTest.tsx\",\n        lineNumber: 355,\n        columnNumber: 5\n    }, undefined);\n};\n_s(TypingTest, \"nOCtOWnR7t+7+rZCf2YYzU0YsxI=\", false, function() {\n    return [\n        _contexts_ThemeContext__WEBPACK_IMPORTED_MODULE_2__.useTheme\n    ];\n});\n_c = TypingTest;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TypingTest);\nvar _c;\n$RefreshReg$(_c, \"TypingTest\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2NvbXBvbmVudHMvVHlwaW5nVGVzdC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Q0FRQzs7QUFDMEQ7QUFDUDtBQUNDO0FBQ047QUFDRTtBQUNBO0FBS3RCO0FBa0IzQixNQUFNWSxxQkFBcUI7SUFBQztJQUFJO0lBQUk7Q0FBSTtBQUN4QyxNQUFNQyxhQUFhO0lBQUM7SUFBSTtJQUFJO0lBQUk7Q0FBRztBQUVuQyxNQUFNQyxhQUF3QztRQUFDLEVBQzdDQyxVQUFVQyxnQkFBZ0IsRUFDMUJDLGdCQUFnQixFQUNoQkMsa0JBQWtCLEVBQ25COztJQUNDLE1BQU0sQ0FBQ0gsVUFBVUksWUFBWSxHQUFHbEIsK0NBQVFBLENBQVdlLG9CQUFvQjtJQUN2RSxNQUFNLENBQUNJLGlCQUFpQkMsbUJBQW1CLEdBQUdwQiwrQ0FBUUEsQ0FBUztJQUMvRCxNQUFNLENBQUNxQixZQUFZQyxjQUFjLEdBQUd0QiwrQ0FBUUEsQ0FBUztJQUNyRCxNQUFNLENBQUN1QixrQkFBa0JDLG9CQUFvQixHQUFHeEIsK0NBQVFBLENBQVM7SUFFakUsTUFBTSxDQUFDeUIsaUJBQWlCQyxtQkFBbUIsR0FBRzFCLCtDQUFRQSxDQUFtQixFQUFFO0lBQzNFLE1BQU0sQ0FBQzJCLGVBQWVDLGlCQUFpQixHQUFHNUIsK0NBQVFBLENBQVM7SUFDM0QsTUFBTSxDQUFDNkIsa0JBQWtCQyxvQkFBb0IsR0FBRzlCLCtDQUFRQSxDQUFXLEVBQUU7SUFDckUsTUFBTSxDQUFDK0IscUJBQXFCQyx1QkFBdUIsR0FBR2hDLCtDQUFRQSxDQUFTO0lBRXZFLE1BQU0sQ0FBQ2lDLFVBQVVDLFlBQVksR0FBR2xDLCtDQUFRQSxDQUFTO0lBQ2pELE1BQU0sQ0FBQ21DLFdBQVdDLGFBQWEsR0FBR3BDLCtDQUFRQSxDQUFDO0lBQzNDLE1BQU0sQ0FBQ3FDLFdBQVdDLGFBQWEsR0FBR3RDLCtDQUFRQSxDQUFnQjtJQUMxRCxNQUFNLENBQUN1QyxVQUFV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RCxPQUFsQkEsTUFBTTJELFFBQVEsRUFBQyxLQUFvQixPQUFqQjNELE1BQU00RCxVQUFVLEVBQUM7Z0NBQ2xIbUIsY0FBVzswQ0FFWCw0RUFBQ0k7b0NBQUlDLE9BQU07b0NBQTZCN0IsV0FBVTtvQ0FBVThCLE1BQUs7b0NBQU9DLFNBQVE7b0NBQVlDLFFBQU87OENBQ2pHLDRFQUFDQzt3Q0FBS0MsZUFBYzt3Q0FBUUMsZ0JBQWU7d0NBQVFDLGFBQWE7d0NBQUdDLEdBQUU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7aURBTTdFLDhEQUFDVjtvQkFBRTNCLFdBQVcsZUFBK0IsT0FBaEJ2RCxNQUFNbUUsU0FBUyxFQUFDOzhCQUFXOzs7Ozs7OEJBRzFELDhEQUFDYjtvQkFDQ0MsV0FBVTtvQkFDVkcsU0FBUzs0QkFBTWpFO2dDQUFBQSxvQkFBQUEsU0FBU2dCLE9BQU8sY0FBaEJoQix3Q0FBQUEsa0JBQWtCaUIsS0FBSzs7b0JBQ3RDbUYsZUFBWTs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLdEI7R0E3WU10STs7UUEyQmNWLDREQUFRQTs7O0tBM0J0QlU7QUErWU4saUVBQWVBLFVBQVVBLEVBQUMiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZHJhZ2dcXE9uZURyaXZlXFxEZXNrdG9wXFxXUE1HQU1FXFxjb21wb25lbnRzXFxUeXBpbmdUZXN0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogVHlwaW5nVGVzdCBDb21wb25lbnRcclxuICogXHJcbiAqIENvcmUgY29tcG9uZW50IHRoYXQgbWFuYWdlcyB0aGUgdHlwaW5nIHRlc3QgZnVuY3Rpb25hbGl0eTpcclxuICogLSBIYW5kbGVzIG11bHRpcGxlIGdhbWUgbW9kZXMgKG5vcm1hbCwgZXhwbGljaXQsIHBhcmFncmFwaHMpXHJcbiAqIC0gVHJhY2tzIHR5cGluZyBtZXRyaWNzIChXUE0sIGFjY3VyYWN5LCBlcnJvcnMpXHJcbiAqIC0gTWFuYWdlcyB0ZXN0IHRpbWluZyBhbmQgc3RhdGVcclxuICogLSBDb2xsZWN0cyBwZXJmb3JtYW5jZSBkYXRhIGZvciByZXN1bHRzIGRpc3BsYXlcclxuICovXHJcbmltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgdXNlVGhlbWUgfSBmcm9tIFwiLi4vY29udGV4dHMvVGhlbWVDb250ZXh0XCI7XHJcbmltcG9ydCB7IGNhbGN1bGF0ZVdQTSB9IGZyb20gXCIuLi91dGlscy9jYWxjdWxhdGlvbnNcIjtcclxuaW1wb3J0IFRleHREaXNwbGF5IGZyb20gXCIuL3R5cGluZy9UZXh0RGlzcGxheVwiO1xyXG5pbXBvcnQgUmVzdWx0c1BhbmVsIGZyb20gXCIuL3R5cGluZy9SZXN1bHRzUGFuZWxcIjtcclxuaW1wb3J0IFN0YXRzRGlzcGxheSBmcm9tIFwiLi90eXBpbmcvU3RhdHNEaXNwbGF5XCI7XHJcbmltcG9ydCB7XHJcbiAgZ2V0UmFuZG9tTm9ybWFsU2VudGVuY2UsXHJcbiAgZ2V0UmFuZG9tRXhwbGljaXRTZW50ZW5jZSxcclxuICBnZXRSYW5kb21QYXJhZ3JhcGhcclxufSBmcm9tIFwiLi4vZGF0YS9zZW50ZW5jZXNcIjtcclxuaW1wb3J0IHR5cGUgeyBQYXJhZ3JhcGhRdW90ZSB9IGZyb20gXCIuLi9kYXRhL3F1b3Rlc1wiO1xyXG5cclxuZXhwb3J0IHR5cGUgR2FtZU1vZGUgPSBcImV4cGxpY2l0XCIgfCBcIm5vcm1hbFwiIHwgXCJxdW90ZXNcIjtcclxuXHJcbmV4cG9ydCB0eXBlIERhdGFQb2ludCA9IHtcclxuICBzZWNvbmQ6IG51bWJlcjtcclxuICB3cG06IG51bWJlcjtcclxuICBhY2N1cmFjeTogbnVtYmVyO1xyXG4gIGVycm9yczogbnVtYmVyO1xyXG59O1xyXG5cclxudHlwZSBUeXBpbmdUZXN0UHJvcHMgPSB7XHJcbiAgZ2FtZU1vZGU/OiBHYW1lTW9kZTtcclxuICBvbkdhbWVNb2RlQ2hhbmdlPzogKG1vZGU6IEdhbWVNb2RlKSA9PiB2b2lkO1xyXG4gIG9uVGVzdFN0YXR1c0NoYW5nZT86IChpc1J1bm5pbmc6IGJvb2xlYW4pID0+IHZvaWQ7XHJcbn07XHJcblxyXG5jb25zdCBOT1JNQUxfV09SRF9DT1VOVFMgPSBbMjUsIDUwLCAxMDBdO1xyXG5jb25zdCBURVNUX1RJTUVTID0gWzE1LCAzMCwgNDUsIDYwXTtcclxuXHJcbmNvbnN0IFR5cGluZ1Rlc3Q6IFJlYWN0LkZDPFR5cGluZ1Rlc3RQcm9wcz4gPSAoeyBcclxuICBnYW1lTW9kZTogZXh0ZXJuYWxHYW1lTW9kZSwgXHJcbiAgb25HYW1lTW9kZUNoYW5nZSxcclxuICBvblRlc3RTdGF0dXNDaGFuZ2UgXHJcbn0pID0+IHtcclxuICBjb25zdCBbZ2FtZU1vZGUsIHNldEdhbWVNb2RlXSA9IHVzZVN0YXRlPEdhbWVNb2RlPihleHRlcm5hbEdhbWVNb2RlIHx8IFwibm9ybWFsXCIpO1xyXG4gIGNvbnN0IFtub3JtYWxXb3JkQ291bnQsIHNldE5vcm1hbFdvcmRDb3VudF0gPSB1c2VTdGF0ZTxudW1iZXI+KDI1KTtcclxuICBjb25zdCBbbm9ybWFsVGV4dCwgc2V0Tm9ybWFsVGV4dF0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiXCIpO1xyXG4gIGNvbnN0IFtub3JtYWxUZXh0T2Zmc2V0LCBzZXROb3JtYWxUZXh0T2Zmc2V0XSA9IHVzZVN0YXRlPG51bWJlcj4oMCk7XHJcblxyXG4gIGNvbnN0IFtwYXJhZ3JhcGhRdW90ZXMsIHNldFBhcmFncmFwaFF1b3Rlc10gPSB1c2VTdGF0ZTxQYXJhZ3JhcGhRdW90ZVtdPihbXSk7XHJcbiAgY29uc3QgW3BhcmFncmFwaFRleHQsIHNldFBhcmFncmFwaFRleHRdID0gdXNlU3RhdGU8c3RyaW5nPihcIlwiKTtcclxuICBjb25zdCBbcGFyYWdyYXBoQXV0aG9ycywgc2V0UGFyYWdyYXBoQXV0aG9yc10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oW10pO1xyXG4gIGNvbnN0IFtjdXJyZW50UGFyYWdyYXBoSWR4LCBzZXRDdXJyZW50UGFyYWdyYXBoSWR4XSA9IHVzZVN0YXRlPG51bWJlcj4oMCk7XHJcblxyXG4gIGNvbnN0IFtzZW50ZW5jZSwgc2V0U2VudGVuY2VdID0gdXNlU3RhdGU8c3RyaW5nPihcIlwiKTtcclxuICBjb25zdCBbdXNlcklucHV0LCBzZXRVc2VySW5wdXRdID0gdXNlU3RhdGUoXCJcIik7XHJcbiAgY29uc3QgW3N0YXJ0VGltZSwgc2V0U3RhcnRUaW1lXSA9IHVzZVN0YXRlPG51bWJlciB8IG51bGw+KG51bGwpO1xyXG4gIGNvbnN0IFt0ZXN0VGltZSwgc2V0VGVzdFRpbWVdID0gdXNlU3RhdGU8bnVtYmVyPig2MCk7XHJcbiAgY29uc3QgW3RpbWVMZWZ0LCBzZXRUaW1lTGVmdF0gPSB1c2VTdGF0ZSh0ZXN0VGltZSk7XHJcbiAgY29uc3QgW3RvdGFsQ2hhcnNUeXBlZCwgc2V0VG90YWxDaGFyc1R5cGVkXSA9IHVzZVN0YXRlKDApO1xyXG4gIGNvbnN0IFtpc0ZpbmlzaGVkLCBzZXRJc0ZpbmlzaGVkXSA9IHVzZVN0YXRlKGZhbHNlKTtcclxuICBjb25zdCBpbnB1dFJlZiA9IHVzZVJlZjxIVE1MSW5wdXRFbGVtZW50PihudWxsKTtcclxuICBjb25zdCBbdHlwaW5nRGF0YSwgc2V0VHlwaW5nRGF0YV0gPSB1c2VTdGF0ZTxEYXRhUG9pbnRbXT4oW10pO1xyXG4gIGNvbnN0IFtlcnJvcnMsIHNldEVycm9yc10gPSB1c2VTdGF0ZSgwKTtcclxuICBjb25zdCBbY29ycmVjdENoYXJzLCBzZXRDb3JyZWN0Q2hhcnNdID0gdXNlU3RhdGUoMCk7XHJcblxyXG4gIGNvbnN0IHsgdGhlbWUgfSA9IHVzZVRoZW1lKCk7XHJcblxyXG4gIC8vIFJlc2V0IGFsbCBzdGF0ZSB0byBpbml0aWFsIHZhbHVlcyAoaGVscGVyKVxyXG4gIGNvbnN0IHJlc2V0QWxsID0gUmVhY3QudXNlQ2FsbGJhY2soKCkgPT4ge1xyXG4gICAgc2V0VXNlcklucHV0KFwiXCIpO1xyXG4gICAgc2V0U3RhcnRUaW1lKG51bGwpO1xyXG4gICAgc2V0VGltZUxlZnQodGVzdFRpbWUpO1xyXG4gICAgc2V0VG90YWxDaGFyc1R5cGVkKDApO1xyXG4gICAgc2V0SXNGaW5pc2hlZChmYWxzZSk7XHJcbiAgICBzZXRFcnJvcnMoMCk7XHJcbiAgICBzZXRDb3JyZWN0Q2hhcnMoMCk7XHJcblxyXG4gICAgaWYgKGdhbWVNb2RlID09PSBcIm5vcm1hbFwiKSB7XHJcbiAgICAgIGNvbnN0IHRleHQgPSBnZXRSYW5kb21Ob3JtYWxTZW50ZW5jZShub3JtYWxXb3JkQ291bnQpO1xyXG4gICAgICBzZXROb3JtYWxUZXh0KHRleHQpO1xyXG4gICAgICBzZXROb3JtYWxUZXh0T2Zmc2V0KDApO1xyXG4gICAgICBzZXRTZW50ZW5jZSh0ZXh0KTtcclxuICAgIH0gZWxzZSBpZiAoZ2FtZU1vZGUgPT09IFwiZXhwbGljaXRcIikge1xyXG4gICAgICBzZXRTZW50ZW5jZShnZXRSYW5kb21FeHBsaWNpdFNlbnRlbmNlKCkpO1xyXG4gICAgfSBlbHNlIGlmIChnYW1lTW9kZSA9PT0gXCJxdW90ZXNcIikge1xyXG4gICAgICBjb25zdCBxdW90ZXM6IFBhcmFncmFwaFF1b3RlW10gPSBbZ2V0UmFuZG9tUGFyYWdyYXBoKCksIGdldFJhbmRvbVBhcmFncmFwaCgpLCBnZXRSYW5kb21QYXJhZ3JhcGgoKV07XHJcbiAgICAgIHNldFBhcmFncmFwaFF1b3RlcyhxdW90ZXMpO1xyXG4gICAgICBzZXRQYXJhZ3JhcGhBdXRob3JzKHF1b3Rlcy5tYXAocSA9PiBxLmF1dGhvcikpO1xyXG4gICAgICBjb25zdCB0ZXh0ID0gcXVvdGVzLm1hcChxID0+IHEudGV4dCkuam9pbihcIiBcIik7XHJcbiAgICAgIHNldFBhcmFncmFwaFRleHQodGV4dCk7XHJcbiAgICAgIHNldFNlbnRlbmNlKHRleHQpO1xyXG4gICAgICBzZXRDdXJyZW50UGFyYWdyYXBoSWR4KDApO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChpbnB1dFJlZi5jdXJyZW50KSB7XHJcbiAgICAgIGlucHV0UmVmLmN1cnJlbnQuZm9jdXMoKTtcclxuICAgIH1cclxuICB9LCBbZ2FtZU1vZGUsIG5vcm1hbFdvcmRDb3VudCwgdGVzdFRpbWVdKTtcclxuXHJcbiAgLy8gUmVzZXQgd2hlbiBtb2RlLCB3b3JkIGNvdW50LCBvciB0ZXN0IHRpbWUgY2hhbmdlc1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICByZXNldEFsbCgpO1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LWhvb2tzL2V4aGF1c3RpdmUtZGVwc1xyXG4gIH0sIFtnYW1lTW9kZSwgbm9ybWFsV29yZENvdW50LCB0ZXN0VGltZV0pO1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgaWYgKCFzdGFydFRpbWUgfHwgaXNGaW5pc2hlZCkgcmV0dXJuO1xyXG5cclxuICAgIGlmICh0aW1lTGVmdCA8PSAwKSB7XHJcbiAgICAgIHNldElzRmluaXNoZWQodHJ1ZSk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICBzZXRUaW1lTGVmdCh0aW1lTGVmdCAtIDEpO1xyXG4gICAgfSwgMTAwMCk7XHJcblxyXG4gICAgcmV0dXJuICgpID0+IGNsZWFyVGltZW91dCh0aW1lcik7XHJcbiAgfSwgW3RpbWVMZWZ0LCBzdGFydFRpbWUsIGlzRmluaXNoZWRdKTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmICghc3RhcnRUaW1lIHx8IGlzRmluaXNoZWQpIHJldHVybjtcclxuICAgIFxyXG4gICAgLy8gQ2FsY3VsYXRlIHRyYWNraW5nIGludGVydmFsIGJhc2VkIG9uIHRlc3QgdGltZVxyXG4gICAgLy8gRm9yIHNob3J0ZXIgdGVzdHMsIHdlIG5lZWQgbW9yZSBmcmVxdWVudCBkYXRhIHBvaW50c1xyXG4gICAgY29uc3QgdHJhY2tpbmdGcmVxdWVuY3kgPSB0ZXN0VGltZSA8PSAxNSA/IDI1MCA6IHRlc3RUaW1lIDw9IDMwID8gNTAwIDogMTAwMDtcclxuICAgIFxyXG4gICAgY29uc3QgdHJhY2tJbnRlcnZhbCA9IHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgY29uc3QgZWxhcHNlZCA9IE1hdGguZmxvb3IoKERhdGUubm93KCkgLSBzdGFydFRpbWUpIC8gMTAwMCAqIDEwMDApIC8gMTAwMDsgLy8gTW9yZSBwcmVjaXNlIHRpbWluZ1xyXG4gICAgICBjb25zdCB0b3RhbENoYXJzID0gdXNlcklucHV0Lmxlbmd0aDtcclxuICAgICAgY29uc3Qgd3BtID0gY2FsY3VsYXRlV1BNKHRvdGFsQ2hhcnNUeXBlZCArIHRvdGFsQ2hhcnMsIGVsYXBzZWQpO1xyXG4gICAgICBjb25zdCBhY2N1cmFjeSA9IHRvdGFsQ2hhcnMgPiAwID8gTWF0aC5yb3VuZCgoY29ycmVjdENoYXJzIC8gdG90YWxDaGFycykgKiAxMDApIDogMTAwO1xyXG4gICAgICBcclxuICAgICAgc2V0VHlwaW5nRGF0YShwcmV2RGF0YSA9PiBbXHJcbiAgICAgICAgLi4ucHJldkRhdGEsXHJcbiAgICAgICAgeyBcclxuICAgICAgICAgIHNlY29uZDogZWxhcHNlZCwgXHJcbiAgICAgICAgICB3cG0sIFxyXG4gICAgICAgICAgYWNjdXJhY3ksIFxyXG4gICAgICAgICAgZXJyb3JzIFxyXG4gICAgICAgIH1cclxuICAgICAgXSk7XHJcbiAgICB9LCB0cmFja2luZ0ZyZXF1ZW5jeSk7XHJcbiAgICBcclxuICAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKHRyYWNrSW50ZXJ2YWwpO1xyXG4gIH0sIFtzdGFydFRpbWUsIGlzRmluaXNoZWQsIHVzZXJJbnB1dC5sZW5ndGgsIHRvdGFsQ2hhcnNUeXBlZCwgY29ycmVjdENoYXJzLCBlcnJvcnMsIHRlc3RUaW1lXSk7XHJcblxyXG4gIC8vIFVwZGF0ZSBwYXJlbnQgY29tcG9uZW50IHdoZW4gdGVzdCBzdGF0dXMgY2hhbmdlc1xyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAob25UZXN0U3RhdHVzQ2hhbmdlKSB7XHJcbiAgICAgIG9uVGVzdFN0YXR1c0NoYW5nZShzdGFydFRpbWUgIT09IG51bGwgJiYgIWlzRmluaXNoZWQpO1xyXG4gICAgfVxyXG4gIH0sIFtzdGFydFRpbWUsIGlzRmluaXNoZWQsIG9uVGVzdFN0YXR1c0NoYW5nZV0pO1xyXG5cclxuICAvLyBTeW5jIHdpdGggZXh0ZXJuYWwgZ2FtZSBtb2RlIGlmIHByb3ZpZGVkXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIGlmIChleHRlcm5hbEdhbWVNb2RlICYmIGV4dGVybmFsR2FtZU1vZGUgIT09IGdhbWVNb2RlKSB7XHJcbiAgICAgIHNldEdhbWVNb2RlKGV4dGVybmFsR2FtZU1vZGUgYXMgR2FtZU1vZGUpO1xyXG4gICAgfVxyXG4gIH0sIFtleHRlcm5hbEdhbWVNb2RlLCBnYW1lTW9kZV0pO1xyXG5cclxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAoZTogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcclxuICAgIGNvbnN0IHZhbHVlID0gZS50YXJnZXQudmFsdWU7XHJcblxyXG4gICAgaWYgKCFzdGFydFRpbWUpIHtcclxuICAgICAgc2V0U3RhcnRUaW1lKERhdGUubm93KCkpO1xyXG4gICAgICBzZXRUeXBpbmdEYXRhKFtdKTtcclxuICAgICAgc2V0RXJyb3JzKDApO1xyXG4gICAgICBzZXRDb3JyZWN0Q2hhcnMoMCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHZhbHVlLmxlbmd0aCA+IHNlbnRlbmNlLmxlbmd0aCkgcmV0dXJuO1xyXG5cclxuICAgIGlmICh2YWx1ZS5sZW5ndGggPiB1c2VySW5wdXQubGVuZ3RoKSB7XHJcbiAgICAgIGNvbnN0IG5ld0NoYXIgPSB2YWx1ZVt2YWx1ZS5sZW5ndGggLSAxXTtcclxuICAgICAgY29uc3QgZXhwZWN0ZWRDaGFyID0gc2VudGVuY2VbdmFsdWUubGVuZ3RoIC0gMV07XHJcblxyXG4gICAgICBpZiAobmV3Q2hhciA9PT0gZXhwZWN0ZWRDaGFyKSB7XHJcbiAgICAgICAgc2V0Q29ycmVjdENoYXJzKHByZXYgPT4gcHJldiArIDEpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNldEVycm9ycyhwcmV2ID0+IHByZXYgKyAxKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldFVzZXJJbnB1dCh2YWx1ZSk7XHJcblxyXG4gICAgaWYgKGdhbWVNb2RlID09PSBcIm5vcm1hbFwiICYmIHZhbHVlLmxlbmd0aCA9PT0gc2VudGVuY2UubGVuZ3RoKSB7XHJcbiAgICAgIHNldFRvdGFsQ2hhcnNUeXBlZCgocHJldikgPT4gcHJldiArIHNlbnRlbmNlLmxlbmd0aCk7XHJcbiAgICAgIHNldFVzZXJJbnB1dChcIlwiKTtcclxuICAgICAgY29uc3QgbmV3VGV4dCA9IGdldFJhbmRvbU5vcm1hbFNlbnRlbmNlKG5vcm1hbFdvcmRDb3VudCk7XHJcbiAgICAgIHNldE5vcm1hbFRleHQocHJldiA9PiBwcmV2ICsgXCIgXCIgKyBuZXdUZXh0KTtcclxuICAgICAgc2V0U2VudGVuY2UocHJldiA9PiBwcmV2ICsgXCIgXCIgKyBuZXdUZXh0KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZ2FtZU1vZGUgPT09IFwiZXhwbGljaXRcIiAmJiB2YWx1ZS5sZW5ndGggPT09IHNlbnRlbmNlLmxlbmd0aCkge1xyXG4gICAgICBzZXRUb3RhbENoYXJzVHlwZWQoKHByZXYpID0+IHByZXYgKyBzZW50ZW5jZS5sZW5ndGgpO1xyXG4gICAgICBzZXRVc2VySW5wdXQoXCJcIik7XHJcbiAgICAgIGNvbnN0IG5ld1RleHQgPSBnZXRSYW5kb21FeHBsaWNpdFNlbnRlbmNlKCk7XHJcbiAgICAgIHNldFNlbnRlbmNlKG5ld1RleHQpO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChnYW1lTW9kZSA9PT0gXCJxdW90ZXNcIikge1xyXG4gICAgICBsZXQgcXVvdGVCb3VuZGFyaWVzOiBudW1iZXJbXSA9IFtdO1xyXG4gICAgICBsZXQgaWR4ID0gMDtcclxuICAgICAgZm9yIChjb25zdCBxIG9mIHBhcmFncmFwaFF1b3Rlcykge1xyXG4gICAgICAgIHF1b3RlQm91bmRhcmllcy5wdXNoKGlkeCk7XHJcbiAgICAgICAgaWR4ICs9IHEudGV4dC5sZW5ndGggKyAxO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gICAgICAvLyBXaGVuIGNvbXBsZXRpbmcgdGhlIGZpcnN0IHBhcmFncmFwaCBhbmQgbW92aW5nIHRvIHRoZSBuZXh0XHJcbiAgICAgIGlmIChcclxuICAgICAgICB2YWx1ZS5sZW5ndGggPiAwICYmXHJcbiAgICAgICAgdmFsdWUubGVuZ3RoID49IChwYXJhZ3JhcGhRdW90ZXNbMF0udGV4dC5sZW5ndGggKyAxKVxyXG4gICAgICApIHtcclxuICAgICAgICAvLyBDYWxjdWxhdGUgaG93IG1hbnkgY2hhcmFjdGVycyBvZiB0aGUgZmlyc3QgcGFyYWdyYXBoIHdlcmUgY29ycmVjdFxyXG4gICAgICAgIGxldCBmaXJzdFBhcmFDb3JyZWN0Q2hhcnMgPSAwO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFyYWdyYXBoUXVvdGVzWzBdLnRleHQubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgIGlmIChpIDwgdmFsdWUubGVuZ3RoICYmIHZhbHVlW2ldID09PSBwYXJhZ3JhcGhRdW90ZXNbMF0udGV4dFtpXSkge1xyXG4gICAgICAgICAgICBmaXJzdFBhcmFDb3JyZWN0Q2hhcnMrKztcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gQWRkIHRoZSBjaGFyYWN0ZXJzIGZyb20gY29tcGxldGVkIHBhcmFncmFwaCB0byB0b3RhbCBjb3VudFxyXG4gICAgICAgIGNvbnN0IGNoYXJzQ29tcGxldGVkID0gcGFyYWdyYXBoUXVvdGVzWzBdLnRleHQubGVuZ3RoICsgMTsgLy8gKzEgZm9yIHNwYWNlXHJcbiAgICAgICAgc2V0VG90YWxDaGFyc1R5cGVkKHByZXYgPT4gcHJldiArIGNoYXJzQ29tcGxldGVkKTtcclxuICAgICAgICBcclxuICAgICAgICAvLyBBZGp1c3QgY29ycmVjdENoYXJzIGNvdW50IC0ga2VlcCBleGlzdGluZyBjb3JyZWN0IGNoYXJzIGJ1dCBzdWJ0cmFjdCB3aGF0IHdhcyBpbiBmaXJzdCBwYXJhZ3JhcGhcclxuICAgICAgICAvLyBhbmQgYWRkIGhvdyBtYW55IHdlcmUgY29ycmVjdCBpbiBmaXJzdCBwYXJhZ3JhcGhcclxuICAgICAgICBzZXRDb3JyZWN0Q2hhcnMocHJldiA9PiB7XHJcbiAgICAgICAgICBjb25zdCByZW1haW5pbmdDb3JyZWN0Q2hhcnMgPSBNYXRoLm1heCgwLCBwcmV2IC0gcGFyYWdyYXBoUXVvdGVzWzBdLnRleHQubGVuZ3RoKTtcclxuICAgICAgICAgIHJldHVybiByZW1haW5pbmdDb3JyZWN0Q2hhcnMgKyBmaXJzdFBhcmFDb3JyZWN0Q2hhcnM7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGNvbnN0IG5ld1F1b3RlID0gZ2V0UmFuZG9tUGFyYWdyYXBoKCk7XHJcbiAgICAgICAgY29uc3QgbmV3UXVvdGVzID0gWy4uLnBhcmFncmFwaFF1b3Rlcy5zbGljZSgxKSwgbmV3UXVvdGVdO1xyXG4gICAgICAgIHNldFBhcmFncmFwaFF1b3RlcyhuZXdRdW90ZXMpO1xyXG4gICAgICAgIHNldFBhcmFncmFwaEF1dGhvcnMobmV3UXVvdGVzLm1hcChxID0+IHEuYXV0aG9yKSk7XHJcbiAgICAgICAgY29uc3QgbmV3VGV4dCA9IG5ld1F1b3Rlcy5tYXAocSA9PiBxLnRleHQpLmpvaW4oXCIgXCIpO1xyXG4gICAgICAgIHNldFBhcmFncmFwaFRleHQobmV3VGV4dCk7XHJcbiAgICAgICAgc2V0U2VudGVuY2UobmV3VGV4dCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gQWRqdXN0IHVzZXJJbnB1dCB0byByZW1vdmUgY29tcGxldGVkIHBhcmFncmFwaFxyXG4gICAgICAgIHNldFVzZXJJbnB1dCh2YWx1ZS5zbGljZShwYXJhZ3JhcGhRdW90ZXNbMF0udGV4dC5sZW5ndGggKyAxKSk7XHJcbiAgICAgICAgc2V0Q3VycmVudFBhcmFncmFwaElkeCgocHJldikgPT4gKHByZXYgKyAxKSAlIDMpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8vIEVuc3VyZSB3ZSBjb250aW51ZSB0cmFja2luZyBtZXRyaWNzIGR1cmluZyBwYXJhZ3JhcGggdHJhbnNpdGlvbnNcclxuICAgICAgICBjb25zdCBlbGFwc2VkID0gTWF0aC5mbG9vcigoRGF0ZS5ub3coKSAtIHN0YXJ0VGltZSEpIC8gMTAwMCk7XHJcbiAgICAgICAgY29uc3Qgd3BtID0gY2FsY3VsYXRlV1BNKHRvdGFsQ2hhcnNUeXBlZCArIGNoYXJzQ29tcGxldGVkLCBlbGFwc2VkKTtcclxuICAgICAgICBjb25zdCB1cGRhdGVkQWNjdXJhY3kgPSAoY29ycmVjdENoYXJzICsgZmlyc3RQYXJhQ29ycmVjdENoYXJzKSAvICh0b3RhbENoYXJzVHlwZWQgKyBjaGFyc0NvbXBsZXRlZCkgKiAxMDA7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gQWRkIGEgZGF0YSBwb2ludCBmb3IgdGhpcyB0cmFuc2l0aW9uIHRvIGVuc3VyZSBncmFwaCBkYXRhXHJcbiAgICAgICAgc2V0VHlwaW5nRGF0YShwcmV2RGF0YSA9PiBbXHJcbiAgICAgICAgICAuLi5wcmV2RGF0YSxcclxuICAgICAgICAgIHsgXHJcbiAgICAgICAgICAgIHNlY29uZDogZWxhcHNlZCwgXHJcbiAgICAgICAgICAgIHdwbSwgXHJcbiAgICAgICAgICAgIGFjY3VyYWN5OiBNYXRoLnJvdW5kKHVwZGF0ZWRBY2N1cmFjeSksIFxyXG4gICAgICAgICAgICBlcnJvcnMgXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgXSk7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgIC8vIFdoZW4gY29tcGxldGluZyBhbGwgcXVvdGVzXHJcbiAgICAgIGlmICh2YWx1ZS5sZW5ndGggPT09IHNlbnRlbmNlLmxlbmd0aCkge1xyXG4gICAgICAgIHNldFRvdGFsQ2hhcnNUeXBlZCgocHJldikgPT4gcHJldiArIHNlbnRlbmNlLmxlbmd0aCk7XHJcbiAgICAgICAgc2V0VXNlcklucHV0KFwiXCIpO1xyXG4gICAgICAgIGNvbnN0IHF1b3RlczogUGFyYWdyYXBoUXVvdGVbXSA9IFtnZXRSYW5kb21QYXJhZ3JhcGgoKSwgZ2V0UmFuZG9tUGFyYWdyYXBoKCksIGdldFJhbmRvbVBhcmFncmFwaCgpXTtcclxuICAgICAgICBzZXRQYXJhZ3JhcGhRdW90ZXMocXVvdGVzKTtcclxuICAgICAgICBzZXRQYXJhZ3JhcGhBdXRob3JzKHF1b3Rlcy5tYXAocSA9PiBxLmF1dGhvcikpO1xyXG4gICAgICAgIGNvbnN0IHRleHQgPSBxdW90ZXMubWFwKHEgPT4gcS50ZXh0KS5qb2luKFwiIFwiKTtcclxuICAgICAgICBzZXRQYXJhZ3JhcGhUZXh0KHRleHQpO1xyXG4gICAgICAgIHNldFNlbnRlbmNlKHRleHQpO1xyXG4gICAgICAgIHNldEN1cnJlbnRQYXJhZ3JhcGhJZHgoMCk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9O1xyXG5cclxuICBjb25zdCB3cG0gPSBpc0ZpbmlzaGVkICYmIHN0YXJ0VGltZVxyXG4gICAgPyBjYWxjdWxhdGVXUE0odG90YWxDaGFyc1R5cGVkICsgdXNlcklucHV0Lmxlbmd0aCwgdGVzdFRpbWUgLSB0aW1lTGVmdClcclxuICAgIDogbnVsbDtcclxuXHJcbiAgY29uc3QgaGFuZGxlUmVzdGFydCA9IHJlc2V0QWxsO1xyXG5cclxuICBjb25zdCBoYW5kbGVNb2RlQ2hhbmdlID0gKG1vZGU6IEdhbWVNb2RlKSA9PiB7XHJcbiAgICBzZXRHYW1lTW9kZShtb2RlKTtcclxuICAgIGlmIChvbkdhbWVNb2RlQ2hhbmdlKSB7XHJcbiAgICAgIG9uR2FtZU1vZGVDaGFuZ2UobW9kZSk7XHJcbiAgICB9XHJcbiAgICAvLyByZXNldEFsbCB3aWxsIGJlIGNhbGxlZCBieSB1c2VFZmZlY3RcclxuICB9O1xyXG5cclxuICBjb25zdCByZW5kZXJXb3JkQ291bnRTZWxlY3RvciA9ICgpID0+IChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWNlbnRlciBtYi02IGdhcC0yXCI+XHJcbiAgICAgIHtOT1JNQUxfV09SRF9DT1VOVFMubWFwKGNvdW50ID0+IChcclxuICAgICAgICA8YnV0dG9uXHJcbiAgICAgICAgICBrZXk9e2NvdW50fVxyXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0Tm9ybWFsV29yZENvdW50KGNvdW50KX1cclxuICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMSByb3VuZGVkLW1kIGJvcmRlciB0cmFuc2l0aW9uICR7XHJcbiAgICAgICAgICAgIG5vcm1hbFdvcmRDb3VudCA9PT0gY291bnRcclxuICAgICAgICAgICAgICA/IFwiYmctYmx1ZS02MDAgdGV4dC13aGl0ZVwiXHJcbiAgICAgICAgICAgICAgOiBgJHt0aGVtZS5idXR0b25CZ30gJHt0aGVtZS5idXR0b25UZXh0fSBob3ZlcjpvcGFjaXR5LTgwYFxyXG4gICAgICAgICAgfWB9XHJcbiAgICAgICAgICBkaXNhYmxlZD17Z2FtZU1vZGUgIT09IFwibm9ybWFsXCJ9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAge2NvdW50fSB3b3Jkc1xyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICApKX1cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG4gIGNvbnN0IHJlbmRlclRpbWVTZWxlY3RvciA9ICgpID0+IChcclxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZmxleCBqdXN0aWZ5LWNlbnRlciBtYi00IGdhcC0yXCI+XHJcbiAgICAgIHtURVNUX1RJTUVTLm1hcChzZWMgPT4gKFxyXG4gICAgICAgIDxidXR0b25cclxuICAgICAgICAgIGtleT17c2VjfVxyXG4gICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0VGVzdFRpbWUoc2VjKX1cclxuICAgICAgICAgIGNsYXNzTmFtZT17YHB4LTMgcHktMSByb3VuZGVkLW1kIGJvcmRlciB0cmFuc2l0aW9uICR7XHJcbiAgICAgICAgICAgIHRlc3RUaW1lID09PSBzZWNcclxuICAgICAgICAgICAgICA/IFwiYmctYmx1ZS02MDAgdGV4dC13aGl0ZVwiXHJcbiAgICAgICAgICAgICAgOiBgJHt0aGVtZS5idXR0b25CZ30gJHt0aGVtZS5idXR0b25UZXh0fSBob3ZlcjpvcGFjaXR5LTgwYFxyXG4gICAgICAgICAgfWB9XHJcbiAgICAgICAgICBkaXNhYmxlZD17c3RhcnRUaW1lICE9PSBudWxsICYmICFpc0ZpbmlzaGVkfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtzZWN9c1xyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICApKX1cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcblxyXG4gIGNvbnN0IHJlbmRlclBhcmFncmFwaEF1dGhvciA9ICgpID0+IHtcclxuICAgIGlmIChnYW1lTW9kZSA9PT0gXCJxdW90ZXNcIiAmJiBwYXJhZ3JhcGhRdW90ZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICBsZXQgaWR4ID0gMDtcclxuICAgICAgbGV0IGFjYyA9IDA7XHJcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGFyYWdyYXBoUXVvdGVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgYWNjICs9IHBhcmFncmFwaFF1b3Rlc1tpXS50ZXh0Lmxlbmd0aCArIDE7XHJcbiAgICAgICAgaWYgKHVzZXJJbnB1dC5sZW5ndGggPCBhY2MpIHtcclxuICAgICAgICAgIGlkeCA9IGk7XHJcbiAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIChcclxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIm10LTQgdGV4dC1yaWdodCB3LWZ1bGwgbWF4LXctM3hsIG14LWF1dG9cIj5cclxuICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YGl0YWxpYyB0ZXh0LWJhc2UgZm9udC1tZWRpdW0gb3BhY2l0eS04MCAke3RoZW1lLnRleHRDb2xvcn1gfT5cclxuICAgICAgICAgICAge3BhcmFncmFwaFF1b3Rlc1tpZHhdPy5hdXRob3J9XHJcbiAgICAgICAgICA8L3NwYW4+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBjbGFzc05hbWU9e3RoZW1lLm1haW5CZ30+XHJcbiAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cIm1heC13LTR4bCB3LWZ1bGwgdHJhbnNpdGlvbi1hbGwgZHVyYXRpb24tMzAwIGVhc2UtaW4tb3V0IGZsZXggZmxleC1jb2wgaXRlbXMtY2VudGVyIG14LWF1dG8gcHgtNFwiPlxyXG4gICAgICAgIHsvKiBUaW1lIHNlbGVjdG9yICovfVxyXG4gICAgICAgIHtyZW5kZXJUaW1lU2VsZWN0b3IoKX1cclxuXHJcbiAgICAgICAge2dhbWVNb2RlID09PSBcIm5vcm1hbFwiICYmIHJlbmRlcldvcmRDb3VudFNlbGVjdG9yKCl9XHJcblxyXG4gICAgICAgIHtzZW50ZW5jZSA/IChcclxuICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidy1mdWxsIG1iLTEyIHRleHQtY2VudGVyIHNlbGVjdC1ub25lXCI+XHJcbiAgICAgICAgICAgICAgPFRleHREaXNwbGF5IFxyXG4gICAgICAgICAgICAgICAgc2VudGVuY2U9e3NlbnRlbmNlfSBcclxuICAgICAgICAgICAgICAgIHVzZXJJbnB1dD17dXNlcklucHV0fSBcclxuICAgICAgICAgICAgICAgIHRoZW1lPXt0aGVtZX0gXHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB7cmVuZGVyUGFyYWdyYXBoQXV0aG9yKCl9XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICA8aW5wdXRcclxuICAgICAgICAgICAgICByZWY9e2lucHV0UmVmfVxyXG4gICAgICAgICAgICAgIHR5cGU9XCJ0ZXh0XCJcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJvcGFjaXR5LTAgYWJzb2x1dGUgdG9wLTAgbGVmdC0wIGgtMSB3LTFcIlxyXG4gICAgICAgICAgICAgIHZhbHVlPXt1c2VySW5wdXR9XHJcbiAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZUNoYW5nZX1cclxuICAgICAgICAgICAgICBkaXNhYmxlZD17aXNGaW5pc2hlZH1cclxuICAgICAgICAgICAgICBhdXRvRm9jdXNcclxuICAgICAgICAgICAgICBzcGVsbENoZWNrPXtmYWxzZX1cclxuICAgICAgICAgICAgICBhdXRvQ29tcGxldGU9XCJvZmZcIlxyXG4gICAgICAgICAgICAgIGF1dG9Db3JyZWN0PVwib2ZmXCJcclxuICAgICAgICAgICAgICBhdXRvQ2FwaXRhbGl6ZT1cIm9mZlwiXHJcbiAgICAgICAgICAgICAgYXJpYS1sYWJlbD1cIlR5cGluZyB0ZXN0IGlucHV0XCJcclxuICAgICAgICAgICAgICB0aXRsZT1cIlR5cGluZyB0ZXN0IGlucHV0XCJcclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIDxTdGF0c0Rpc3BsYXkgXHJcbiAgICAgICAgICAgICAgdGltZUxlZnQ9e3RpbWVMZWZ0fVxyXG4gICAgICAgICAgICAgIHRvdGFsQ2hhcnNUeXBlZD17dG90YWxDaGFyc1R5cGVkfVxyXG4gICAgICAgICAgICAgIHVzZXJJbnB1dExlbmd0aD17dXNlcklucHV0Lmxlbmd0aH1cclxuICAgICAgICAgICAgICB0aGVtZT17dGhlbWV9XHJcbiAgICAgICAgICAgIC8+XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB7aXNGaW5pc2hlZCAmJiB3cG0gIT09IG51bGwgPyAoXHJcbiAgICAgICAgICAgICAgPFJlc3VsdHNQYW5lbCBcclxuICAgICAgICAgICAgICAgIHdwbT17d3BtfVxyXG4gICAgICAgICAgICAgICAgdHlwaW5nRGF0YT17dHlwaW5nRGF0YX1cclxuICAgICAgICAgICAgICAgIGhhbmRsZVJlc3RhcnQ9e2hhbmRsZVJlc3RhcnR9XHJcbiAgICAgICAgICAgICAgICB0aGVtZT17dGhlbWV9XHJcbiAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YHRleHQtY2VudGVyICR7dGhlbWUudGV4dENvbG9yfSBvcGFjaXR5LTcwIGl0YWxpYyBtdC0yYH0+XHJcbiAgICAgICAgICAgICAgICB7IXN0YXJ0VGltZSA/IChcclxuICAgICAgICAgICAgICAgICAgPHA+Q2xpY2sgYW55d2hlcmUgYW5kIHN0YXJ0IHR5cGluZyB7Z2FtZU1vZGUgPT09IFwicXVvdGVzXCIgPyBcImV4YWN0bHkgd2hhdCB5b3Ugc2VlXCIgOiBcInRoZSB0ZXh0XCJ9IHRvIGJlZ2luLi4uPC9wPlxyXG4gICAgICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgICAgPHA+S2VlcCB0eXBpbmchIFRoZSBjbG9jayBpcyB0aWNraW5nLi4uPC9wPlxyXG4gICAgICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgKX1cclxuICAgICAgICAgICAgey8qIFJlc2V0IGJ1dHRvbiBhdCB0aGUgYm90dG9tICovfVxyXG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXgganVzdGlmeS1jZW50ZXIgbXQtOFwiPlxyXG4gICAgICAgICAgICAgIDxidXR0b25cclxuICAgICAgICAgICAgICAgIG9uQ2xpY2s9e2hhbmRsZVJlc3RhcnR9XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e2BmbGV4IGl0ZW1zLWNlbnRlciBnYXAtMiBweC00IHB5LTIgcm91bmRlZC1mdWxsIHNoYWRvdyB0cmFuc2l0aW9uICR7dGhlbWUuYnV0dG9uQmd9ICR7dGhlbWUuYnV0dG9uVGV4dH0gaG92ZXI6b3BhY2l0eS04MGB9XHJcbiAgICAgICAgICAgICAgICBhcmlhLWxhYmVsPVwiUmVzZXQgdHlwaW5nIHRlc3RcIlxyXG4gICAgICAgICAgICAgID5cclxuICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIGNsYXNzTmFtZT1cImgtNSB3LTVcIiBmaWxsPVwibm9uZVwiIHZpZXdCb3g9XCIwIDAgMjQgMjRcIiBzdHJva2U9XCJjdXJyZW50Q29sb3JcIj5cclxuICAgICAgICAgICAgICAgICAgPHBhdGggc3Ryb2tlTGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlTGluZWpvaW49XCJyb3VuZFwiIHN0cm9rZVdpZHRoPXsyfSBkPVwiTTEyIDRWMW0wIDBMOCA1bTQtNGw0IDRNNC45MyA0LjkzYTEwIDEwIDAgMTAxNC4xNCAwTTEgMTJoM20xNiAwaDNcIiAvPlxyXG4gICAgICAgICAgICAgICAgPC9zdmc+XHJcbiAgICAgICAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPC8+XHJcbiAgICAgICAgKSA6IChcclxuICAgICAgICAgIDxwIGNsYXNzTmFtZT17YHRleHQtY2VudGVyICR7dGhlbWUudGV4dENvbG9yfSB0ZXh0LWxnYH0+TG9hZGluZyBjaGFsbGVuZ2UuLi48L3A+XHJcbiAgICAgICAgKX1cclxuXHJcbiAgICAgICAgPGRpdiBcclxuICAgICAgICAgIGNsYXNzTmFtZT1cImZpeGVkIGluc2V0LTAgei1bLTFdXCIgXHJcbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBpbnB1dFJlZi5jdXJyZW50Py5mb2N1cygpfVxyXG4gICAgICAgICAgYXJpYS1oaWRkZW49XCJ0cnVlXCJcclxuICAgICAgICA+PC9kaXY+XHJcbiAgICAgIDwvc2VjdGlvbj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBUeXBpbmdUZXN0O1xyXG4iXSwibmFtZXMiOlsiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZVRoZW1lIiwiY2FsY3VsYXRlV1BNIiwiVGV4dERpc3BsYXkiLCJSZXN1bHRzUGFuZWwiLCJTdGF0c0Rpc3BsYXkiLCJnZXRSYW5kb21Ob3JtYWxTZW50ZW5jZSIsImdldFJhbmRvbUV4cGxpY2l0U2VudGVuY2UiLCJnZXRSYW5kb21QYXJhZ3JhcGgiLCJOT1JNQUxfV09SRF9DT1VOVFMiLCJURVNUX1RJTUVTIiwiVHlwaW5nVGVzdCIsImdhbWVNb2RlIiwiZXh0ZXJuYWxHYW1lTW9kZSIsIm9uR2FtZU1vZGVDaGFuZ2UiLCJvblRlc3RTdGF0dXNDaGFuZ2UiLCJzZXRHYW1lTW9kZSIsIm5vcm1hbFdvcmRDb3VudCIsInNldE5vcm1hbFdvcmRDb3VudCIsIm5vcm1hbFRleHQiLCJzZXROb3JtYWxUZXh0Iiwibm9ybWFsVGV4dE9mZnNldCIsInNldE5vcm1hbFRleHRPZmZzZXQiLCJwYXJhZ3JhcGhRdW90ZXMiLCJzZXRQYXJhZ3JhcGhRdW90ZXMiLCJwYXJhZ3JhcGhUZXh0Iiwic2V0UGFyYWdyYXBoVGV4dCIsInBhcmFncmFwaEF1dGhvcnMiLCJzZXRQYXJhZ3JhcGhBdXRob3JzIiwiY3VycmVudFBhcmFncmFwaElkeCIsInNldEN1cnJlbnRQYXJhZ3JhcGhJZHgiLCJzZW50ZW5jZSIsInNldFNlbnRlbmNlIiwidXNlcklucHV0Iiwic2V0VXNlcklucHV0Iiwic3RhcnRUaW1lIiwic2V0U3RhcnRUaW1lIiwidGVzdFRpbWUiLCJzZXRUZXN0VGltZSIsInRpbWVMZWZ0Iiwic2V0VGltZUxlZnQiLCJ0b3RhbENoYXJzVHlwZWQiLCJzZXRUb3RhbENoYXJzVHlwZWQiLCJpc0ZpbmlzaGVkIiwic2V0SXNGaW5pc2hlZCIsImlucHV0UmVmIiwidHlwaW5nRGF0YSIsInNldFR5cGluZ0RhdGEiLCJlcnJvcnMiLCJzZXRFcnJvcnMiLCJjb3JyZWN0Q2hhcnMiLCJzZXRDb3JyZWN0Q2hhcnMiLCJ0aGVtZSIsInJlc2V0QWxsIiwidXNlQ2FsbGJhY2siLCJ0ZXh0IiwicXVvdGVzIiwibWFwIiwicSIsImF1dGhvciIsImpvaW4iLCJjdXJyZW50IiwiZm9jdXMiLCJ0aW1lciIsInNldFRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJ0cmFja2luZ0ZyZXF1ZW5jeSIsInRyYWNrSW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImVsYXBzZWQiLCJNYXRoIiwiZmxvb3IiLCJEYXRlIiwibm93IiwidG90YWxDaGFycyIsImxlbmd0aCIsIndwbSIsImFjY3VyYWN5Iiwicm91bmQiLCJwcmV2RGF0YSIsInNlY29uZCIsImNsZWFySW50ZXJ2YWwiLCJoYW5kbGVDaGFuZ2UiLCJlIiwidmFsdWUiLCJ0YXJnZXQiLCJuZXdDaGFyIiwiZXhwZWN0ZWRDaGFyIiwicHJldiIsIm5ld1RleHQiLCJxdW90ZUJvdW5kYXJpZXMiLCJpZHgiLCJwdXNoIiwiZmlyc3RQYXJhQ29ycmVjdENoYXJzIiwiaSIsImNoYXJzQ29tcGxldGVkIiwicmVtYWluaW5nQ29ycmVjdENoYXJzIiwibWF4IiwibmV3UXVvdGUiLCJuZXdRdW90ZXMiLCJzbGljZSIsInVwZGF0ZWRBY2N1cmFjeSIsImhhbmRsZVJlc3RhcnQiLCJoYW5kbGVNb2RlQ2hhbmdlIiwibW9kZSIsInJlbmRlcldvcmRDb3VudFNlbGVjdG9yIiwiZGl2IiwiY2xhc3NOYW1lIiwiY291bnQiLCJidXR0b24iLCJvbkNsaWNrIiwiYnV0dG9uQmciLCJidXR0b25UZXh0IiwiZGlzYWJsZWQiLCJyZW5kZXJUaW1lU2VsZWN0b3IiLCJzZWMiLCJyZW5kZXJQYXJhZ3JhcGhBdXRob3IiLCJhY2MiLCJzcGFuIiwidGV4dENvbG9yIiwibWFpbkJnIiwic2VjdGlvbiIsImlucHV0IiwicmVmIiwidHlwZSIsIm9uQ2hhbmdlIiwiYXV0b0ZvY3VzIiwic3BlbGxDaGVjayIsImF1dG9Db21wbGV0ZSIsImF1dG9Db3JyZWN0IiwiYXV0b0NhcGl0YWxpemUiLCJhcmlhLWxhYmVsIiwidGl0bGUiLCJ1c2VySW5wdXRMZW5ndGgiLCJwIiwic3ZnIiwieG1sbnMiLCJmaWxsIiwidmlld0JveCIsInN0cm9rZSIsInBhdGgiLCJzdHJva2VMaW5lY2FwIiwic3Ryb2tlTGluZWpvaW4iLCJzdHJva2VXaWR0aCIsImQiLCJhcmlhLWhpZGRlbiJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./components/TypingTest.tsx\n"));

/***/ })

});