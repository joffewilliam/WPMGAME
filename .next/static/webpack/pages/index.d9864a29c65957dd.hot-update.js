"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "(pages-dir-browser)/./data/sentences.ts":
/*!***************************!*\
  !*** ./data/sentences.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomExplicitSentence: () => (/* binding */ getRandomExplicitSentence),\n/* harmony export */   getRandomNormalSentence: () => (/* binding */ getRandomNormalSentence),\n/* harmony export */   getRandomParagraph: () => (/* binding */ getRandomParagraph)\n/* harmony export */ });\n/* harmony import */ var _normalWords__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./normalWords */ \"(pages-dir-browser)/./data/normalWords.ts\");\n/* harmony import */ var _explicitWords__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./explicitWords */ \"(pages-dir-browser)/./data/explicitWords.ts\");\n/**\r\n * Sentence Generation Utilities\r\n * \r\n * Contains functions for generating typing content:\r\n * - Random normal sentences with common words\r\n * - Random explicit sentences with profanity (for explicit mode)\r\n * - Random paragraph selection from famous quotes\r\n */ \n\n// Generate a sentence of random normal words\nfunction getRandomNormalSentence() {\n    let wordCount = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 15;\n    let sentence = '';\n    for(let i = 0; i < wordCount; i++){\n        const randomWord = _normalWords__WEBPACK_IMPORTED_MODULE_0__.normalWords[Math.floor(Math.random() * _normalWords__WEBPACK_IMPORTED_MODULE_0__.normalWords.length)];\n        sentence += randomWord + (i < wordCount - 1 ? ' ' : '');\n    }\n    return sentence.charAt(0).toUpperCase() + sentence.slice(1) + '.';\n}\n// Generate a sentence of random explicit words mixed with common words\nfunction getRandomExplicitSentence() {\n    let wordCount = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 15, explicitRatio = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0.4;\n    let sentence = '';\n    for(let i = 0; i < wordCount; i++){\n        const useExplicit = Math.random() < explicitRatio;\n        const wordPool = useExplicit ? _explicitWords__WEBPACK_IMPORTED_MODULE_1__.explicitWords : _normalWords__WEBPACK_IMPORTED_MODULE_0__.normalWords;\n        const randomWord = wordPool[Math.floor(Math.random() * wordPool.length)];\n        sentence += randomWord + (i < wordCount - 1 ? ' ' : '');\n    }\n    return sentence.charAt(0).toUpperCase() + sentence.slice(1) + '.';\n}\n// Get a random paragraph from the list\nfunction getRandomParagraph() {\n    return paragraphs[Math.floor(Math.random() * paragraphs.length)];\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHBhZ2VzLWRpci1icm93c2VyKS8uL2RhdGEvc2VudGVuY2VzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQUE7Ozs7Ozs7Q0FPQyxHQUMyQztBQUNJO0FBR2hELDZDQUE2QztBQUN0QyxTQUFTRTtRQUF3QkMsWUFBQUEsaUVBQW9CO0lBQzFELElBQUlDLFdBQVc7SUFDZixJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUYsV0FBV0UsSUFBSztRQUNsQyxNQUFNQyxhQUFhTixxREFBVyxDQUFDTyxLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBS1QscURBQVdBLENBQUNVLE1BQU0sRUFBRTtRQUM5RU4sWUFBWUUsYUFBY0QsQ0FBQUEsSUFBSUYsWUFBWSxJQUFJLE1BQU0sRUFBQztJQUN2RDtJQUNBLE9BQU9DLFNBQVNPLE1BQU0sQ0FBQyxHQUFHQyxXQUFXLEtBQUtSLFNBQVNTLEtBQUssQ0FBQyxLQUFLO0FBQ2hFO0FBRUEsdUVBQXVFO0FBQ2hFLFNBQVNDO1FBQTBCWCxZQUFBQSxpRUFBb0IsSUFBSVksZ0JBQUFBLGlFQUF3QjtJQUN4RixJQUFJWCxXQUFXO0lBQ2YsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLFdBQVdFLElBQUs7UUFDbEMsTUFBTVcsY0FBY1QsS0FBS0UsTUFBTSxLQUFLTTtRQUNwQyxNQUFNRSxXQUFXRCxjQUFjZix5REFBYUEsR0FBR0QscURBQVdBO1FBQzFELE1BQU1NLGFBQWFXLFFBQVEsQ0FBQ1YsS0FBS0MsS0FBSyxDQUFDRCxLQUFLRSxNQUFNLEtBQUtRLFNBQVNQLE1BQU0sRUFBRTtRQUN4RU4sWUFBWUUsYUFBY0QsQ0FBQUEsSUFBSUYsWUFBWSxJQUFJLE1BQU0sRUFBQztJQUN2RDtJQUNBLE9BQU9DLFNBQVNPLE1BQU0sQ0FBQyxHQUFHQyxXQUFXLEtBQUtSLFNBQVNTLEtBQUssQ0FBQyxLQUFLO0FBQ2hFO0FBRUEsdUNBQXVDO0FBQ2hDLFNBQVNLO0lBQ2QsT0FBT0MsVUFBVSxDQUFDWixLQUFLQyxLQUFLLENBQUNELEtBQUtFLE1BQU0sS0FBS1UsV0FBV1QsTUFBTSxFQUFFO0FBQ2xFIiwic291cmNlcyI6WyJDOlxcVXNlcnNcXGRyYWdnXFxPbmVEcml2ZVxcRGVza3RvcFxcV1BNR0FNRVxcZGF0YVxcc2VudGVuY2VzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBTZW50ZW5jZSBHZW5lcmF0aW9uIFV0aWxpdGllc1xyXG4gKiBcclxuICogQ29udGFpbnMgZnVuY3Rpb25zIGZvciBnZW5lcmF0aW5nIHR5cGluZyBjb250ZW50OlxyXG4gKiAtIFJhbmRvbSBub3JtYWwgc2VudGVuY2VzIHdpdGggY29tbW9uIHdvcmRzXHJcbiAqIC0gUmFuZG9tIGV4cGxpY2l0IHNlbnRlbmNlcyB3aXRoIHByb2Zhbml0eSAoZm9yIGV4cGxpY2l0IG1vZGUpXHJcbiAqIC0gUmFuZG9tIHBhcmFncmFwaCBzZWxlY3Rpb24gZnJvbSBmYW1vdXMgcXVvdGVzXHJcbiAqL1xyXG5pbXBvcnQgeyBub3JtYWxXb3JkcyB9IGZyb20gXCIuL25vcm1hbFdvcmRzXCI7XHJcbmltcG9ydCB7IGV4cGxpY2l0V29yZHMgfSBmcm9tIFwiLi9leHBsaWNpdFdvcmRzXCI7XHJcbmltcG9ydCB7IHF1b3RlcywgUGFyYWdyYXBoUXVvdGUgfSBmcm9tIFwiLi9xdW90ZXNcIjtcclxuXHJcbi8vIEdlbmVyYXRlIGEgc2VudGVuY2Ugb2YgcmFuZG9tIG5vcm1hbCB3b3Jkc1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UmFuZG9tTm9ybWFsU2VudGVuY2Uod29yZENvdW50OiBudW1iZXIgPSAxNSk6IHN0cmluZyB7XHJcbiAgbGV0IHNlbnRlbmNlID0gJyc7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB3b3JkQ291bnQ7IGkrKykge1xyXG4gICAgY29uc3QgcmFuZG9tV29yZCA9IG5vcm1hbFdvcmRzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIG5vcm1hbFdvcmRzLmxlbmd0aCldO1xyXG4gICAgc2VudGVuY2UgKz0gcmFuZG9tV29yZCArIChpIDwgd29yZENvdW50IC0gMSA/ICcgJyA6ICcnKTtcclxuICB9XHJcbiAgcmV0dXJuIHNlbnRlbmNlLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpICsgc2VudGVuY2Uuc2xpY2UoMSkgKyAnLic7XHJcbn1cclxuXHJcbi8vIEdlbmVyYXRlIGEgc2VudGVuY2Ugb2YgcmFuZG9tIGV4cGxpY2l0IHdvcmRzIG1peGVkIHdpdGggY29tbW9uIHdvcmRzXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21FeHBsaWNpdFNlbnRlbmNlKHdvcmRDb3VudDogbnVtYmVyID0gMTUsIGV4cGxpY2l0UmF0aW86IG51bWJlciA9IDAuNCk6IHN0cmluZyB7XHJcbiAgbGV0IHNlbnRlbmNlID0gJyc7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCB3b3JkQ291bnQ7IGkrKykge1xyXG4gICAgY29uc3QgdXNlRXhwbGljaXQgPSBNYXRoLnJhbmRvbSgpIDwgZXhwbGljaXRSYXRpbztcclxuICAgIGNvbnN0IHdvcmRQb29sID0gdXNlRXhwbGljaXQgPyBleHBsaWNpdFdvcmRzIDogbm9ybWFsV29yZHM7XHJcbiAgICBjb25zdCByYW5kb21Xb3JkID0gd29yZFBvb2xbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogd29yZFBvb2wubGVuZ3RoKV07XHJcbiAgICBzZW50ZW5jZSArPSByYW5kb21Xb3JkICsgKGkgPCB3b3JkQ291bnQgLSAxID8gJyAnIDogJycpO1xyXG4gIH1cclxuICByZXR1cm4gc2VudGVuY2UuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBzZW50ZW5jZS5zbGljZSgxKSArICcuJztcclxufVxyXG5cclxuLy8gR2V0IGEgcmFuZG9tIHBhcmFncmFwaCBmcm9tIHRoZSBsaXN0XHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21QYXJhZ3JhcGgoKTogUGFyYWdyYXBoUXVvdGUge1xyXG4gIHJldHVybiBwYXJhZ3JhcGhzW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBhcmFncmFwaHMubGVuZ3RoKV07XHJcbn1cclxuIl0sIm5hbWVzIjpbIm5vcm1hbFdvcmRzIiwiZXhwbGljaXRXb3JkcyIsImdldFJhbmRvbU5vcm1hbFNlbnRlbmNlIiwid29yZENvdW50Iiwic2VudGVuY2UiLCJpIiwicmFuZG9tV29yZCIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImxlbmd0aCIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwic2xpY2UiLCJnZXRSYW5kb21FeHBsaWNpdFNlbnRlbmNlIiwiZXhwbGljaXRSYXRpbyIsInVzZUV4cGxpY2l0Iiwid29yZFBvb2wiLCJnZXRSYW5kb21QYXJhZ3JhcGgiLCJwYXJhZ3JhcGhzIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(pages-dir-browser)/./data/sentences.ts\n"));

/***/ })

});